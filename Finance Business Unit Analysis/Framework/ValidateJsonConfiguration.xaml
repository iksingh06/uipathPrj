<Activity mc:Ignorable="sap sap2010 sads" x:Class="ValidateJsonConfiguration"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_difference" Type="OutArgument(x:String)" />
    <x:Property Name="in_jsonTemplate" Type="InArgument(njl:JObject)" />
    <x:Property Name="in_jsonConfiguration" Type="InArgument(njl:JObject)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ValidateJsonConfiguration_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow validates the structure of the JSON configuration agaist the template by looping through all the properties of the template JSON file and looking for each one in the config JSON. If it is found the type is matched. If it is a JObject the function is called recursively, and so the whole structure will be mapped and compared.&#xD;&#xA;Below the JSON data types:&#xD;&#xA;JToken             - abstract base class     &#xD;&#xA;   JContainer      - abstract base class of JTokens that can contain other JTokens&#xD;&#xA;       JArray      - represents an JSON array (contains an ordered list of JTokens)&#xD;&#xA;       JObject     - represents an JSON object (contains a collection of JProperties)&#xD;&#xA;       JProperty   - represents a JSON property (a name/JToken pair inside a JObject)&#xD;&#xA;   JValue          - represents a primitive JSON value (string, number, boolean, null)" DisplayName="ValidateJsonConfiguration" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_difference]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="njl:JProperty" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_jsonTemplate.Children]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="njl:JProperty">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="njl:JProperty" Name="templateProperty" />
          </ActivityAction.Argument>
          <Sequence DisplayName="For each property in template" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="njl:JToken" Name="configToken" />
              <Variable x:TypeArguments="njl:JToken" Name="templateToken" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="njl:JToken">[configToken]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="njl:JToken">[in_jsonConfiguration.Root.SelectToken(templateProperty.Path)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="njl:JToken">[templateToken]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="njl:JToken">[in_jsonTemplate.Root.SelectToken(templateProperty.Path)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[configToken is Nothing]" DisplayName="If config Token is nothing" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_difference]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Missing JToken: " + templateToken.Path]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[not(configToken.Type.Equals(templateToken.Type))]" DisplayName="If Token Types are not Equal" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_difference]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["JToken " + templateToken.Path + " has wrong type: " + configToken.GetType.ToString + ". Expected type: " + templateToken.GetType.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Break sap2010:WorkflowViewState.IdRef="Break_2" />
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[templateToken.GeTtype is GetType(JObject)]" DisplayName="If template token is JObject" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence DisplayName="Recursive call" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="difference" />
                  </Sequence.Variables>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ValidateJsonConfiguration workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ValidateJsonConfiguration.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_difference">[difference]</OutArgument>
                      <InArgument x:TypeArguments="njl:JObject" x:Key="in_jsonTemplate">[TryCast(templateToken, JObject)]</InArgument>
                      <InArgument x:TypeArguments="njl:JObject" x:Key="in_jsonConfiguration">[TryCast(configToken, Jobject)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[not(string.IsNullOrEmpty(difference))]" DisplayName="If there is a difference, break" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_difference]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[difference]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d3xDOlxVc2Vyc1xtaWhhaS5kdW5hcmVhbnVcR29vZ2xlIERyaXZlXFdvcmtzcGFjZVxVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aF9SRUZyYW1ld29ya1xGcmFtZXdvcmtcVmFsaWRhdGVKc29uQ29uZmlndXJhdGlvbi54YW1sK0gDrgEOAgEBSQVQDgIBNVEFrAESAgECTjBOPgIBOEsxS0ECATZRfVGZAQIBNFcLqQEWAgEDXA1jFgIBLmQNaxYCAShsDXoSAgEgew2JARICARiKAQ2oARICAQRhOmF4AgExXjteSAIBL2k6aXMCAStmO2ZKAgEpbBtsNQIBIW4ReBwCASJ7G3tPAgEZfRGHARwCARqKARuKAUgCAQWMARGmARwCAQZvE3YcAgEkdxN3SQIBI34ThQEcAgEchgEThgFJAgEbjgFCjgFSAgEHkAETlgErAgESlwETpQEYAgEIdD50ZwIBJ3E/cU8CASWDAT6DAcoBAgEfgAE/gAFPAgEdlAFelAF9AgEXkwFZkwF6AgEWkgFWkgFiAgEUkAHUAZAB9AECAROXASGXAUoCAQmZARejASICAQuaARmhASICAQ2iARmiAU8CAQyfAUSfAVACARCcAUWcAVUCAQ4=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="649.6,60.8" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="611.2,60.8" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="611.2,60.8" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="265.6,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="611.2,398.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Break_2" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="265.6,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="611.2,398.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="464,88" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="265.6,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,398.4" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="486.4,651.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="611.2,801.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="633.6,2004.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="649.6,2139.2" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="672,2536.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ValidateJsonConfiguration_1" sap:VirtualizedContainerService.HintSize="712,2696.8" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>